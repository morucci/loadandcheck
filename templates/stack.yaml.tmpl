heat_template_version: 2013-05-23

description: >
  Random stack to validate a deployment.

parameters:
  key_name:
    type: string
    description: Name of a KeyPair to enable SSH access to the instance
  ext_net_uuid:
    type: string
    description: The UUID of the external net
  r_image_id:
    type: string
    description: Glance image ID for all the nodes
  instance_type:
    type: string
    description: Instance type for roles

resources:
  r_net:
    type: OS::Neutron::Net
    properties:
      name: RNet

  r_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: r_net }
      cidr: 192.168.0.0/24
      enable_dhcp: true

  router:
    type: OS::Neutron::Router

  router_gateway:
    type: OS::Neutron::RouterGateway
    properties:
      router_id: { get_resource: router }
      network_id: { get_param: ext_net_uuid }

  router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet_id: { get_resource: r_subnet }

  ext_ssh_secgroup:
    type: OS::Neutron::SecurityGroup
    properties:
      rules: [
        {remote_ip_prefix: 0.0.0.0/0,
         protocol: tcp,
         port_range_min: 22,
         port_range_max: 22},
        ]

  {% for node in nodes %}
  {{ node.name }}_neutron_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: r_net }
      security_groups: [ { get_resource: ext_ssh_secgroup }, ]

  {{ node.name }}_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      port_id: { get_resource: {{ node.name }}_neutron_port }
      floating_network_id: { get_param: ext_net_uuid }

  {{ node.name }}_instance:
    type: OS::Nova::Server
    properties:
      image: { get_param: r_image_id }
      flavor: { get_param: instance_type }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: {{ node.name }}_neutron_port }
      user_data_format: RAW
      user_data: |
        #cloud-config
        output: {all: '| tee -a /var/log/cloud-init-output.log'}
        hostname: {{ node.name }}
        fqdn: {{ node.name }}.tests.dom
        disable_root: 0
        runcmd:
          - echo "{{ node.name }}" > /root/witness
  {% endfor %}

outputs:
  {% for node in nodes %}
  {{ node.name }}_public_address:
    description: Public address of {{ node.name }}
    value:
      str_replace:
        template: "host"
        params:
          host: { get_attr: [{{ node.name }}_floating_ip, floating_ip_address] }
  {% endfor %}
